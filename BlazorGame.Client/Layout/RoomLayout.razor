@inherits LayoutComponentBase
@using SharedModels.Enums
@using System.ComponentModel.DataAnnotations
@using SharedModels.Enums.Environment

<div class="room-container">
    <div class="room-header">
        <h4>Salle @RoomId</h4>
        @if (!string.IsNullOrEmpty(Description))
        {
            <p class="room-description">@Description</p>
        }
    </div>

    <div class="room-content">
        @Body
    </div>

    @if (AvailableActions != null && AvailableActions.Any())
    {
        <div class="room-actions">
            <ul class="action-list">
                @foreach (var action in AvailableActions)
                {
                    <li>
                        <button class="btn btn-primary">
                            @GetActionDisplayName(action)
                        </button>
                    </li>
                }
            </ul>
        </div>
    }
</div>

@code {

    /// <summary>
    /// Identifiant unique de la salle.
    /// </summary>
    [Parameter]
    public int RoomId { get; set; }

    /// <summary>
    /// Description pour une salle.
    /// </summary> 
    [Parameter]
    public string? Description { get; set; }


    /// <summary>
    /// Liste des actions disponibles dans une salle.
    /// </summary>
    [Parameter]
    public IReadOnlyList<AvailableActions>? AvailableActions { get; set; }

    /// <summary>
    /// Récupère le nom d'affichage d'une action.
    /// </summary>
    /// <param name="action"></param>
    /// <returns></returns>n
    private static string GetActionDisplayName(AvailableActions action)
    {
        var displayName = action.GetType()
        .GetMember(action.ToString())
        .FirstOrDefault()?
        .GetCustomAttributes(typeof(DisplayAttribute), false)
        .FirstOrDefault() as DisplayAttribute;

        return displayName?.Name ?? action.ToString();
    }  
}